package com.example.everydaychallenges.evrdchall.presentation.loginScreen

import androidx.compose.animation.core.animateOffsetAsState
import androidx.compose.animation.core.tween
import androidx.compose.foundation.Canvas
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.LaunchedEffect
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.geometry.Offset

@Composable
fun LoginScreen(modifier: Modifier = Modifier) {
    var generated by remember { mutableStateOf(false) }
    val circleColor = MaterialTheme.colorScheme.secondary
    val circleOffset = animateOffsetAsState(
        targetValue = if (generated) Offset(0f, 0f) else Offset(800f, 800f),
        tween(5000)
    )

    LaunchedEffect(Unit) {
        generated = true
    }

    Box(
        modifier = modifier
            .fillMaxSize()
            .background(MaterialTheme.colorScheme.primaryContainer)
    ) {
        Canvas (
            modifier = Modifier
                .fillMaxSize()
        ) {
            drawCircle(
                color = circleColor,
                radius = 400f,
                center = circleOffset.value
            )
        }
        Column(
            modifier = Modifier
                .fillMaxSize(),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text("siemanko")
        }
    }
}